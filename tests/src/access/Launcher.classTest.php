<?php

namespace househub\access;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-04 at 15:42:01.
 */
class LauncherTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Launcher
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Launcher;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     *  househub\access\Launcher::launch
     * @dataProvider provider
     */
    public function testLaunch($strategyName) {
        $parameters = array(
            "method" => $strategyName
        );
        
        $answer = $this->object->launch($parameters);
        echo $strategyName . "   ";
        var_dump($answer);
        echo "\n";
        //$this->assertNotNull($answer);
        
    }

    public function provider() {
        $strategies = 
                array(
                   "cougar",
                   "login",
                   "logout",
                   "verify_login",
                   "add_user",
                   "register_admin",
                   "grant_view",
                   "connect",
                   "call_service",
                   "gather_object",
                   "change_visual",
                   "validate",
                   "obj_update",
                   "list_objects",
                   "gather_group",
                   "add_group",
                   "drop_group",
                   "update_group",
                   "list_groups",
                   "gather_user_groups",
                   "gather_home_groups",
                   "gather_intents",
                   "cleaning",
                   "upload_image",
                   "drop_image",
                   "list_images"
               );
        $arguments = array();
        
        foreach($strategies as $strategy){
            $arguments[] = array($strategy);
        }
        
        return $arguments;
    }

}
