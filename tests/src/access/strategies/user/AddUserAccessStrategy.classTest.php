<?php

namespace househub\access\strategies\user;

$d = DIRECTORY_SEPARATOR;
require_once(realpath(__DIR__ . $d . ".." . $d . "session" .  $d . "LoginHelper.php"));

use househub\access\strategies\session\LoginHelper;
use househub\access\DatabaseConnector;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-03 at 01:09:33.
 */
class AddUserAccessStrategyTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var AddUserAccessStrategy
     */
    protected $object;
    protected $loginHelper; /**
     * @var PDO
     */
    protected $pdo;
    /**
     * @group cookie
     */
    protected function setUp() {
        $this->pdo = DatabaseConnector::getDriver();
        $this->pdo->beginTransaction();
        
        $this->object = new AddUserAccessStrategy();
        $this->loginHelper = new LoginHelper();
    }
    
    protected function tearDown() {
        $this->pdo->rollBack();
    }

    
    
    
    /**
     * househub\access\strategies\user\AddUserAccessStrategy::requestAccess
     * @group cookie
     */
    public function testRequestAccess() {
        if($this->loginHelper->doLogin()){
            $answer = $this->addUser();
            
            $this->assertEquals(1,$answer->getStatus());
            $this->assertEquals("@success",$answer->getMessage());
        }
        else{
            $this->fail("user is not logged");
        }
    }
    
    protected function addUser(){
            $parameters = array(
                AddUserAccessStrategy::LOGIN_ARG => "userLogin",
                AddUserAccessStrategy::PASS_ARG => "123456",
                AddUserAccessStrategy::NAME_ARG => "userName",
                AddUserAccessStrategy::NICK_ARG => "userNick",
                AddUserAccessStrategy::GENDER_ARG => "?"
            );
            
            $answer = $this->object->requestAccess($parameters);
            return $answer;
    }

    /**
     * househub\access\strategies\user\AddUserAccessStrategy::requestAccess
     * @group cookie
     */
    public function testRequestAccessFailNoLogin() {
        $this->loginHelper->doLogoff();
        $parameters = array();
//        $parameters['']...
        $answer = $this->object->requestAccess($parameters);
        $this->assertEquals(0,$answer->getStatus());
        $this->assertEquals("@forbidden",$answer->getMessage());
    }
    /**
     * househub\access\strategies\user\AddUserAccessStrategy::requestAccess
     * @group cookie
     */
    public function testRequestAccessFailIncorrectParameters() {
        if($this->loginHelper->doLogin()){

            $parameters = array();
            $answer = $this->object->requestAccess($parameters);
            
            $this->assertEquals(0,$answer->getStatus());
            $this->assertEquals("@error",$answer->getMessage());
        }
        else{
            $this->fail("user is not logged");
        }
    }
/**
     * househub\access\strategies\user\AddUserAccessStrategy::requestAccess
     * @group cookie
     */
    public function testRequestAccessFailDoubleLogin() {
        if($this->loginHelper->doLogin()){
            $answer = $this->addUser();
            $this->assertEquals(1,$answer->getStatus());
            $this->assertEquals("@success",$answer->getMessage());
            
            $secondAnswer = $this->addUser();
            $this->assertEquals(0,$secondAnswer->getStatus());
            $this->assertEquals("@login_already_taken",$secondAnswer->getMessage());
        }
        else{
            $this->fail("user is not logged");
        }
    }
}
