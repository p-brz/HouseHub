<?php

namespace househub\scheme;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-03 at 00:09:55.
 */
class SchemeTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Scheme
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $d = DIRECTORY_SEPARATOR;
        $rootDir = __DIR__ . $d . "..". $d . "..". $d . ".." . $d;
        $directory =  realpath($rootDir . $d . "files" . $d . "schemes");
        
        echo $directory;
        
        $jsonReader = new SchemeJsonFileReader($directory);
        
        $this->object = $jsonReader->getScheme("basicDoor");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * househub\scheme\Scheme::getSchemeName
     * @todo   Implement testGetSchemeName().
     */
    public function testGetSchemeName() {
        $this->assertEquals("basicDoor",$this->object->getSchemeName());
    }

    /**
     * househub\scheme\Scheme::getSchemeVersion
     */
    public function testGetSchemeVersion() {
        $this->assertEquals(2,$this->object->getSchemeVersion());
    }

    /**
     * househub\scheme\Scheme::getObjectType
     * @todo   Implement testGetObjectType().
     */
    public function testGetObjectType() {
        $this->assertEquals("door",$this->object->getObjectType());
    }

    /**
     * househub\scheme\Scheme::getConfigs
     */
    public function testGetConfigs() {
        $configs = $this->object->getConfigs();
        $this->assertNotNull($configs);
        $this->assertCount(3,$configs);
        $this->assertContainsOnlyInstancesOf('\\househub\\scheme\\SchemeProperty',$configs);
    }

    /**
     * househub\scheme\Scheme::getStatus
     */
    public function testGetStatus() {
        $status = $this->object->getStatus();
        $this->assertNotNull($status);
        $this->assertCount(2,$status);
        $this->assertContainsOnlyInstancesOf('\\househub\\scheme\\SchemeProperty',$status);
    }

    /**
     * househub\scheme\Scheme::getServices
     * @todo   Implement testGetServices().
     */
    public function testGetServices() {
        $services = $this->object->getServices();
        $this->assertNotNull($services);
        $this->assertCount(2,$services);
        $this->assertContainsOnlyInstancesOf('\\househub\\scheme\\SchemeService',$services);
    }

    /**
     * househub\scheme\Scheme::getConditions
     */
    public function testGetConditions() {
        $conditions = $this->object->getConditions();
        $this->assertNotNull($conditions);
        $this->assertCount(3,$conditions);
        $this->assertContainsOnlyInstancesOf('\\househub\\conditions\\ObjectCondition',$conditions);
    }

    /**
     * househub\scheme\Scheme::setSchemeName
     * @todo   Implement testSetSchemeName().
     */
    public function testSetSchemeName() {
        $this->object->setSchemeName("NovoNome");
        $this->assertEquals("NovoNome",$this->object->getSchemeName());
    }

    /**
     * househub\scheme\Scheme::setSchemeVersion
     */
    public function testSetSchemeVersion() {
        $this->object->setSchemeVersion(3);
        $this->assertEquals(3,$this->object->getSchemeVersion());
    }

    /**
     * househub\scheme\Scheme::setObjectType
     */
    public function testSetObjectType() {
        $this->object->setObjectType("lamp");
        $this->assertEquals("lamp",$this->object->getObjectType());
    }

    /**
     * househub\scheme\Scheme::setConfigs
     * @todo   Implement testSetConfigs().
     */
    public function testSetConfigs() {
        $this->object->setConfigs(array());
        $this->assertEquals(array(),$this->object->getConfigs());
    }

    /**
     * househub\scheme\Scheme::setStatus
     * @todo   Implement testSetStatus().
     */
    public function testSetStatus() {
        $this->object->setStatus(array());
        $this->assertEquals(array(),$this->object->getStatus());
    }

    /**
     * househub\scheme\Scheme::setServices
     * @todo   Implement testSetServices().
     */
    public function testSetServices() {
        $this->object->setServices(array());
        $this->assertEquals(array(),$this->object->getServices());
    }

    /**
     * househub\scheme\Scheme::setConditions
     * @todo   Implement testSetConditions().
     */
    public function testSetConditions() {
        $this->object->setConditions(array());
        $this->assertEquals(array(),$this->object->getConditions());
    }

}
