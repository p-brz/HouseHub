<?php

namespace househub\scheme;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-03 at 11:12:07.
 */
class SchemeServiceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var SchemeService
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $localJsonReader = new SchemeJsonFileReader(__DIR__);
        
        $scheme = $localJsonReader->getScheme("schemeTest");
        $services = $scheme->getServices();
        $this->object = $services[0];
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    /**
     *  househub\scheme\SchemeService::getName
     */
    public function testGetName() {
        $name = $this->object->getName();
        $this->assertTrue(is_null($name) || is_string($name));
        $this->assertEquals("someService", $name);
    }

    /**
     *  househub\scheme\SchemeService::getPath
     */
    public function testGetPath() {
        $path = $this->object->getPath();
        $this->assertTrue(is_null($path) || is_string($path));
    }

    /**
     *  househub\scheme\SchemeService::getReturnType
     */
    public function testGetReturnType() {
        $this->assertEquals("boolean", $this->object->getReturnType());
    }

    /**
     *  househub\scheme\SchemeService::getText
     */
    public function testGetText() {
        $this->assertTrue(is_null($this->object->getText()) || is_string($this->object->getText()));
    }

    /**
     *  househub\scheme\SchemeService::getUndoService
     */
    public function testGetUndoService() {
        $this->assertNull($this->object->getUndoService());
    }

    /**
     *  househub\scheme\SchemeService::getParameters
     */
    public function testGetParameters() {
        $parameters = $this->object->getParameters();
        $this->assertNotNull($parameters);
        $this->assertContainsOnlyInstancesOf('\\househub\\scheme\\SchemeProperty', $parameters);
    }

    /**
     *  househub\scheme\SchemeService::getParameters
     */
    public function testGetParameters2() {
        $this->object->setParameters(array());
        $parameters = $this->object->getParameters();
        $this->assertEmpty($parameters);
    }

}
