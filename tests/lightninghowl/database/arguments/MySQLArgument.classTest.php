<?php

namespace lightninghowl\database\arguments;

$d = DIRECTORY_SEPARATOR;
//require_once(__DIR__.$d.'..'.$d.'..'.$d.'..'.$d.'..'.$d.'lightninghowl'.$d.'utils'.$d.'AutoLoader.class.php');
require_once(realpath(__DIR__.$d.'..'.$d.'..'.$d.'..'.$d.'..'.$d.'lightninghowl'.$d.'utils'.$d.'AutoLoader.class.php'));

//use lightninghowl\database\arguments\MySQLArgument;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-28 at 08:43:52.
 */
class MySQLArgumentTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var MySQLArgument
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new MySQLArgument();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getLogin
     * @todo   Implement testGetLogin().
     */
    public function testGetLogin() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getPassword
     * @todo   Implement testGetPassword().
     */
    public function testGetPassword() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getDSN
     * @todo   Implement testGetDSN().
     */
    public function testGetDSN() {
        $expected = 'mysql:host=;port=;dbname=';
        $this->assertEquals($this->object->getDSN(), $expected);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getHost
     * @todo   Implement testGetHost().
     */
    public function testGetHost() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getPort
     * @todo   Implement testGetPort().
     */
    public function testGetPort() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getDbName
     * @todo   Implement testGetDbName().
     */
    public function testGetDbName() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getDbUser
     * @todo   Implement testGetDbUser().
     */
    public function testGetDbUser() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::getDbPass
     * @todo   Implement testGetDbPass().
     */
    public function testGetDbPass() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::setHost
     * @todo   Implement testSetHost().
     */
    public function testSetHost() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::setPort
     * @todo   Implement testSetPort().
     */
    public function testSetPort() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::setDbName
     * @todo   Implement testSetDbName().
     */
    public function testSetDbName() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::setDbUser
     * @todo   Implement testSetDbUser().
     */
    public function testSetDbUser() {
        $this->assertTrue(true);
    }

    /**
     * @covers lightninghowl\database\arguments\MySQLArgument::setDbPass
     * @todo   Implement testSetDbPass().
     */
    public function testSetDbPass() {
        $this->assertTrue(true);
    }

}
